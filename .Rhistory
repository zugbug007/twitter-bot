# Build the status message (text and URL)
place_details <- paste0(
ntplaces$title, ". ", ntplaces$description, "\n", url_address_short, "/"
)
place_details
# Provide alt-text description
alt_text <- ntplaces$`links/0/imageLink/caption`
alt_text
ntplaces$`location/lat`
ntplaces$`location/lon`
lat <- ntplaces$`location/lat`
lon <- ntplaces$`location/lon`
lat <- ntplaces$`location/lat`
lon <- ntplaces$`location/lon`
place_details
image_url
alt_text
# Provide alt-text description
alt_text <- paste(ntplaces$`links/0/imageLink/caption`", Credit:", ntplaces$`links/0/imageLink/credit`)
# Post the image to Twitter
rtweet::post_tweet(
status         = place_details,
media          = image_url,
media_alt_text = alt_text,
lat            = lat,
long           = lon,
token          = nttwitterbot_token
)
# Provide alt-text description
alt_text <- paste(ntplaces$`links/0/imageLink/caption`," Credit: ",ntplaces$`links/0/imageLink/credit`)
alt_text
# Provide alt-text description
alt_text <- paste(ntplaces$`links/0/imageLink/caption`," Credit:",ntplaces$`links/0/imageLink/credit`)
alt_text
# Provide alt-text description
alt_text <- paste(ntplaces$`links/0/imageLink/caption`,".|",ntplaces$`links/0/imageLink/credit`)
alt_text
# Provide alt-text description
alt_text <- paste(ntplaces$`links/0/imageLink/caption`,"|",ntplaces$`links/0/imageLink/credit`)
alt_text
ShortURL <- function(link, linkPreview = FALSE) {
api <- if(linkPreview) {"http://v.gd/create.php?format=json"} else {"http://is.gd/create.php?format=json"}
query <- list(url = link)
request <- httr::GET(api, query = query)
content <- httr::content(request, as = "text", encoding = "utf-8")
result <- jsonlite::fromJSON(content)
return(result)
}
# Create Twitter token
nttwitterbot_token <- rtweet::rtweet_bot(
api_key       = Sys.getenv("TwitterAPIkey"),
api_secret    = Sys.getenv("TwitterAPIsecretkey"),
access_token  = Sys.getenv("TwitterAccessToken"),
access_secret = Sys.getenv("TwitterAccessTokenSecret")
)
sheet_name <- "https://docs.google.com/spreadsheets/d/1LmsYM4c3hg8yFI21Orh8GHQ57qK7X0WenUYifFQ4080/edit#gid=1506467172"
url_address_short <- ShortURL(ntplaces$websiteUrl)
url_address_short
image_url
# Build the status message (text and URL)
place_details <- paste0(
ntplaces$title, ". ", ntplaces$description, "\n", url_address_short, "/"
)
place_details
# Provide alt-text description
alt_text <- paste(ntplaces$`links/0/imageLink/caption`,"|",ntplaces$`links/0/imageLink/credit`)
alt_text
# Provide alt-text description
alt_text <- paste(ntplaces$`links/0/imageLink/caption`,"|",ntplaces$`links/0/imageLink/credit`)
# Post the image to Twitter
rtweet::post_tweet(
status         = place_details,
media          = image_url,
media_alt_text = alt_text,
lat            = lat,
long           = lon,
token          = nttwitterbot_token
)
# Get the image URL
img <- ntplaces$imageUrl
# Post the image to Twitter
rtweet::post_tweet(
status         = place_details,
media          = img,
media_alt_text = alt_text,
lat            = lat,
long           = lon,
token          = nttwitterbot_token
)
# Build URL and fetch image from Mapbox API
img_url <- ntplaces$imageUrl
# Download the image to a temporary location
temp_file <- tempfile(fileext = ".jpeg")
download.file(img_url, temp_file)
# Post the image to Twitter
rtweet::post_tweet(
status         = place_details,
media          = temp_file,
media_alt_text = alt_text,
lat            = lat,
long           = lon,
token          = nttwitterbot_token
)
nttwitterbot_token
Sys.getenv("TwitterAPIkey")
Sys.getenv("TwitterAPIsecretkey")
Sys.getenv("TwitterAccessToken")
Sys.getenv("TwitterAccessTokenSecret")
View(nttwitterbot_token)
temp_file
download.file(img_url, temp_file)
# Post the image to Twitter
rtweet::post_tweet(
status         = place_details,
# media          = temp_file,
# media_alt_text = alt_text,
lat            = lat,
long           = lon,
token          = nttwitterbot_token
)
# Post the image to Twitter
rtweet::post_tweet(
status         = place_details,
media          = temp_file,
media_alt_text = alt_text,
lat            = lat,
long           = lon,
token          = nttwitterbot_token
)
# ## authenticate via web browser
nttwitterbot_token <- create_token(
app = "rtwitterscraper_alanmillington",
consumer_key = Sys.getenv("TwitterAPIkey"),
consumer_secret = Sys.getenv("TwitterAPIsecretkey"),
set_renv = FALSE
)
auth_setup_default()
# Post the image to Twitter
rtweet::post_tweet(
status         = place_details,
media          = temp_file,
media_alt_text = alt_text,
lat            = lat,
long           = lon,
token          = nttwitterbot_token
)
auth_setup_default()
# ## authenticate via web browser
nttwitterbot_token <- create_token(
app = "rtwitterscraper_alanmillington",
consumer_key = Sys.getenv("TwitterAPIkey"),
consumer_secret = Sys.getenv("TwitterAPIsecretkey"),
set_renv = TRUE
)
# Create Twitter token BOT VERSION
nttwitterbot_token <- rtweet::rtweet_app(
api_key       = Sys.getenv("TwitterAPIkey"),
api_secret    = Sys.getenv("TwitterAPIsecretkey"),
access_token  = Sys.getenv("TwitterAccessToken"),
access_secret = Sys.getenv("TwitterAccessTokenSecret")
)
# Create Twitter token BOT VERSION
nttwitterbot_token <- rtweet::rtweet_user(
api_key       = Sys.getenv("TwitterAPIkey"),
api_secret    = Sys.getenv("TwitterAPIsecretkey"),
access_token  = Sys.getenv("TwitterAccessToken"),
access_secret = Sys.getenv("TwitterAccessTokenSecret")
)
# Create Twitter token BOT VERSION
nttwitterbot_token <- rtweet::rtweet_user(
api_key       = Sys.getenv("TwitterAPIkey"),
api_secret    = Sys.getenv("TwitterAPIsecretkey"),
access_token  = Sys.getenv("TwitterAccessToken"),
access_secret = Sys.getenv("TwitterAccessTokenSecret")
)
# Create Twitter token BOT VERSION
nttwitterbot_token <- rtweet::rtweet_bot(
api_key       = Sys.getenv("TwitterAPIkey"),
api_secret    = Sys.getenv("TwitterAPIsecretkey"),
access_token  = Sys.getenv("TwitterAccessToken"),
access_secret = Sys.getenv("TwitterAccessTokenSecret")
)
# Create Twitter token BOT VERSION
nttwitterbot_token <- rtweet::rtweet_user(
api_key       = Sys.getenv("TwitterAPIkey"),
api_secret    = Sys.getenv("TwitterAPIsecretkey")
)
# Create Twitter token BOT VERSION
nttwitterbot_token <- rtweet::rtweet_bot(
api_key       = Sys.getenv("TwitterAPIkey"),
api_secret    = Sys.getenv("TwitterAPIsecretkey"),
access_token  = Sys.getenv("TwitterAccessToken"),
access_secret = Sys.getenv("TwitterAccessTokenSecret")
)
hashtags <- "#nationaltrust"
# Build the status message (text and URL)
place_details <- paste0(
ntplaces$title, ". ",
ntplaces$description, "\n",
url_address_short, "/",
hashtags
)
place_details
# Build the status message (text and URL)
place_details <- paste0(
ntplaces$title, ". ",
ntplaces$description, "\n",
url_address_short, "\n",
hashtags
)
place_details
# Build the status message (text and URL)
place_details <- paste(
ntplaces$title, ". ",
ntplaces$description, "\n",
url_address_short, "\n",
hashtags
)
place_details
# Build the status message (text and URL)
place_details <- paste0(
ntplaces$title, ". ",
ntplaces$description, "\n",
url_address_short, "\n ",
hashtags
)
place_details
# Build the status message (text and URL)
place_details <- paste0(
ntplaces$title, ". ",
ntplaces$description, "\n",
url_address_short, " ",
hashtags
)
place_details
# Build the status message (text and URL)
place_details <- paste0(
ntplaces$title, ".",
ntplaces$description, "\n",
url_address_short, " ",
hashtags
)
place_details
# Build the status message (text and URL)
place_details <- paste0(
ntplaces$title, ":",
ntplaces$description, "\n",
url_address_short, " ",
hashtags
)
place_details
# Build the status message (text and URL)
place_details <- paste0(
ntplaces$title, ". ",
ntplaces$description, "\n",
url_address_short, " ",
hashtags
)
place_details
ShortURL <- function(link, linkPreview = FALSE) {
api <- if(linkPreview) {"http://v.gd/create.php?format=json"} else {"http://is.gd/create.php?format=json"}
query <- list(url = link)
request <- httr::GET(api, query = query)
content <- httr::content(request, as = "text", encoding = "utf-8")
result <- jsonlite::fromJSON(content)
return(result)
}
hashtags <- "#nationaltrust"
# Create Twitter token BOT VERSION
nttwitterbot_token <- rtweet::rtweet_bot(
api_key       = Sys.getenv("TwitterAPIkey"),
api_secret    = Sys.getenv("TwitterAPIsecretkey"),
access_token  = Sys.getenv("TwitterAccessToken"),
access_secret = Sys.getenv("TwitterAccessTokenSecret")
)
sheet_name <- "https://docs.google.com/spreadsheets/d/1LmsYM4c3hg8yFI21Orh8GHQ57qK7X0WenUYifFQ4080/edit#gid=1506467172"
ntplaces_list <- read_sheet(sheet_name, sheet = "Dev")
ntplaces <- ntplaces_list %>% sample_n(size = 1)
lat <- ntplaces$`location/lat`
lon <- ntplaces$`location/lon`
url_address_short <- ShortURL(ntplaces$websiteUrl)
# Get the image URL
img_url <- ntplaces$imageUrl
# Download the image to a temporary location
temp_file <- tempfile(fileext = ".jpeg")
download.file(img_url, temp_file)
# Build the status message (text and URL)
place_details <- paste0(
ntplaces$title, ". ",
ntplaces$description, "\n",
url_address_short, " ",
hashtags
)
# Provide alt-text description
alt_text <- paste(ntplaces$`links/0/imageLink/caption`,"|",ntplaces$`links/0/imageLink/credit`)
place_details
img_url
tempfile
## PNG----
temp <- tempfile(fileext = ".png")
download.file(img_url, temp, mode = "wb")
temp
hashtags <- "#nationaltrust"
# Create Twitter token BOT VERSION
nttwitterbot_token <- rtweet::rtweet_bot(
api_key       = Sys.getenv("TwitterAPIkey"),
api_secret    = Sys.getenv("TwitterAPIsecretkey"),
access_token  = Sys.getenv("TwitterAccessToken"),
access_secret = Sys.getenv("TwitterAccessTokenSecret")
)
sheet_name <- "https://docs.google.com/spreadsheets/d/1LmsYM4c3hg8yFI21Orh8GHQ57qK7X0WenUYifFQ4080/edit#gid=1506467172"
ntplaces_list <- read_sheet(sheet_name, sheet = "Dev")
ntplaces <- ntplaces_list %>% sample_n(size = 1)
lat <- ntplaces$`location/lat`
lon <- ntplaces$`location/lon`
url_address_short <- ShortURL(ntplaces$websiteUrl)
# Get the image URL
img_url <- ntplaces$imageUrl
# Download the image to a temporary location
temp_file <- tempfile(fileext = ".jpeg")
download.file(img_url, temp_file)
## PNG----
temp <- tempfile(fileext = ".png")
download.file(img_url, temp, mode = "wb")
# Build the status message (text and URL)
place_details <- paste0(
ntplaces$title, ". ",
ntplaces$description, "\n",
url_address_short, " ",
hashtags
)
# Provide alt-text description
alt_text <- paste(ntplaces$`links/0/imageLink/caption`,"|",ntplaces$`links/0/imageLink/credit`)
place_details
temp
library(googlesheets4)
library(rtweet)
library(dplyr)
library(httr)
library(jsonlite)
ShortURL <- function(link, linkPreview = FALSE) {
api <- if(linkPreview) {"http://v.gd/create.php?format=json"} else {"http://is.gd/create.php?format=json"}
query <- list(url = link)
request <- httr::GET(api, query = query)
content <- httr::content(request, as = "text", encoding = "utf-8")
result <- jsonlite::fromJSON(content)
return(result)
}
hashtags <- "#nationaltrust"
# Create Twitter token BOT VERSION
nttwitterbot_token <- rtweet::rtweet_bot(
api_key       = Sys.getenv("TwitterAPIkey"),
api_secret    = Sys.getenv("TwitterAPIsecretkey"),
access_token  = Sys.getenv("TwitterAccessToken"),
access_secret = Sys.getenv("TwitterAccessTokenSecret")
)
sheet_name <- "https://docs.google.com/spreadsheets/d/1LmsYM4c3hg8yFI21Orh8GHQ57qK7X0WenUYifFQ4080/edit#gid=1506467172"
ntplaces_list <- read_sheet(sheet_name, sheet = "Dev")
ntplaces <- ntplaces_list %>% sample_n(size = 1)
lat <- ntplaces$`location/lat`
lon <- ntplaces$`location/lon`
url_address_short <- ShortURL(ntplaces$websiteUrl)
# Get the image URL
img_url <- ntplaces$imageUrl
# Download the image to a temporary location PNG----
temp <- tempfile(fileext = ".png")
download.file(img_url, temp, mode = "wb")
# Build the status message (text and URL)
place_details <- paste0(
ntplaces$title, ". ",
ntplaces$description, "\n",
url_address_short, " ",
hashtags
)
# Provide alt-text description
alt_text <- paste(ntplaces$`links/0/imageLink/caption`,"|",ntplaces$`links/0/imageLink/credit`)
place_details
temp
# Post the image to Twitter
# rtweet::post_tweet(
#   status         = place_details,
#   media          = temp_file,
#   media_alt_text = alt_text,
#   lat            = lat,
#   long           = lon,
#   token          = nttwitterbot_token
# )
# Build the status message (text and URL)
place_details <- paste0(
ntplaces$title, ". ",
ntplaces$description, ".\n",
url_address_short, " ",
hashtags
)
# Provide alt-text description
alt_text <- paste(ntplaces$`links/0/imageLink/caption`,"|",ntplaces$`links/0/imageLink/credit`)
place_details
temp
place_details
temp
alt_text
library(googlesheets4)
library(rtweet)
library(dplyr)
library(httr)
library(jsonlite)
ShortURL <- function(link, linkPreview = FALSE) {
api <- if(linkPreview) {"http://v.gd/create.php?format=json"} else {"http://is.gd/create.php?format=json"}
query <- list(url = link)
request <- httr::GET(api, query = query)
content <- httr::content(request, as = "text", encoding = "utf-8")
result <- jsonlite::fromJSON(content)
return(result)
}
hashtags <- "#nationaltrust"
# Create Twitter token BOT VERSION
nttwitterbot_token <- rtweet::rtweet_bot(
api_key       = Sys.getenv("TwitterAPIkey"),
api_secret    = Sys.getenv("TwitterAPIsecretkey"),
access_token  = Sys.getenv("TwitterAccessToken"),
access_secret = Sys.getenv("TwitterAccessTokenSecret")
)
sheet_name <- "https://docs.google.com/spreadsheets/d/1LmsYM4c3hg8yFI21Orh8GHQ57qK7X0WenUYifFQ4080/edit#gid=1506467172"
ntplaces_list <- read_sheet(sheet_name, sheet = "Dev")
ntplaces <- ntplaces_list %>% sample_n(size = 1)
lat <- ntplaces$`location/lat`
lon <- ntplaces$`location/lon`
url_address_short <- ShortURL(ntplaces$websiteUrl)
# Get the image URL
img_url <- ntplaces$imageUrl
# Download the image to a temporary location PNG----
temp <- tempfile(fileext = ".png")
download.file(img_url, temp, mode = "wb")
# Build the status message (text and URL)
place_details <- paste0(
ntplaces$title, ". ",
ntplaces$description, ".\n",
url_address_short, " ",
hashtags
)
# Provide alt-text description
alt_text <- paste(ntplaces$`links/0/imageLink/caption`,"|",ntplaces$`links/0/imageLink/credit`)
place_details
temp
alt_text
# Post the image to Twitter
# rtweet::post_tweet(
#   status         = place_details,
#   media          = temp_file,
#   media_alt_text = alt_text,
#   lat            = lat,
#   long           = lon,
#   token          = nttwitterbot_token
# )
saveRDS(ntplaces_list, file = "data/places.rds")
# Load the data set
ntplaces_list <- readRDS("data/places.rds")
ntplaces_list
library(rtweet)
library(dplyr)
ShortURL <- function(link, linkPreview = FALSE) {
api <- if(linkPreview) {"http://v.gd/create.php?format=json"} else {"http://is.gd/create.php?format=json"}
query <- list(url = link)
request <- httr::GET(api, query = query)
content <- httr::content(request, as = "text", encoding = "utf-8")
result <- jsonlite::fromJSON(content)
return(result)
}
hashtags <- "#nationaltrust"
# Create Twitter token BOT VERSION
nttwitterbot_token <- rtweet::rtweet_bot(
api_key       = Sys.getenv("BOT_TwitterAPIkey"),
api_secret    = Sys.getenv("BOT_TwitterAPIsecretkey"),
access_token  = Sys.getenv("TwitterAccessToken"),
access_secret = Sys.getenv("TwitterAccessTokenSecret")
)
# Load the data set
ntplaces_list <- readRDS("data/places.rds")
ntplaces <- ntplaces_list %>% sample_n(size = 1)
lat <- ntplaces$`location/lat`
lon <- ntplaces$`location/lon`
url_address_short <- ShortURL(ntplaces$websiteUrl)
# Get the image URL
img_url <- ntplaces$imageUrl
# Download the image to a temporary location PNG----
temp <- tempfile(fileext = ".png")
download.file(img_url, temp, mode = "wb")
# Build the status message (text and URL)
place_details <- paste0(
ntplaces$title, ". ",
ntplaces$description, ".\n",
url_address_short, " ",
hashtags
)
# Provide alt-text description
alt_text <- paste(ntplaces$`links/0/imageLink/caption`,"|",ntplaces$`links/0/imageLink/credit`)
# Checkout
place_details
temp
alt_text
# Post the image to Twitter
# rtweet::post_tweet(
#   status         = place_details,
#   media          = temp_file,
#   media_alt_text = alt_text,
#   lat            = lat,
#   long           = lon,
#   token          = nttwitterbot_token
# )
Sys.getenv("BOT_TwitterAccessTokenSecret")
Sys.getenv("BOT_TwitterAPIkey")
Sys.getenv("BOT_TwitterAPIsecretkey")
